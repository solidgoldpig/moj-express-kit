{% macro checkboxGroup(name, inline='', label='', or=false, options='') %}
{% set error = getError(name) %}
{% set inline = getElementProp(name, 'inline', { value: inline }) %}
{% set label = getElementProp(name, 'label', { value: label }) %}
{% set options = getElementProp(name, 'options', { value: options }) %}
<div class="form-group{% if error %} error{% endif %}"{% if name %} data-element-block="{{name}}"{% endif %}>
{% call fieldset(name, label=label, inline=inline) %}
	{#% set or = getElementProp(name, 'or') %#}
	{% for option_name in options %}
		{% if option_name.value %}
			{% set option = option_name %}
			{% set option_name = option.name %}
		{% else %}
			{% set option = getElementProp(option_name) %}
		{% endif %}
		{% set checked = false %}
		{% set option_value = 'yes' %}
		{% if option.value %}
			{% set option_value = option.value %}
		{% endif %}
		{% if option_value === getValue(option_name) %}
			{% set checked = true %}
		{% endif %}
		{% if loop.last %}
			{% set excludes = option.excludes %}
			{% if excludes %}{% set or = true %}{% endif %}
			{% if or %}
				<p class="form-block">{{ getString('string:or') }}</p>
			{% endif %}	
		{% endif %}
		{% set reveals = checkReveals(option_name, option_value) %}
		<div class="multiple-choice"{% if reveals %} data-target="reveals--{{ reveals }}"{% endif %}>
			<input id="{{ option_name }}" type="checkbox" name="{{ option_name }}" value="{{ option_value }}"{% if checked %} checked{% endif %}{% if reveals %} aria-controls="reveals--{{ reveals }}"{% endif %}>
		<label data-element-block={{option_name}} for="{{ option_name }}" class="block-label selection-button-checkbox"{% if excludes %} data-excludes="true"{% endif %}>
			{{ optionLabel(option) }}
		</label>
		{{ subelement(option.subelement) }}
		</div>
	{% endfor %}
{% endcall %}
</div>
{% endmacro %}